@using Microsoft.AspNet.Identity

@model IEnumerable<Attitude_Loose.ViewModels.UserManagementViewModel>
@{
    ViewBag.Title = "History";
    Layout = "../Shared/_HomeLayout.cshtml";
}

<head>
    <title>Popup editing</title>
    <meta charset="utf-8">
    <!--<link href="../../Content/kendo/examples-offline.css" rel="stylesheet">-->
    <link href="../../Content/kendo/kendo.common.min.css" rel="stylesheet">
    <link href="../../Content/kendo/kendo.default.min.css" rel="stylesheet">
    <link href="../../Content/kendo/kendo.rtl.min.css" rel="stylesheet">
    <link href="../../Content/kendo/kendo.default.mobile.min.css" rel="stylesheet">
    <script src="../../Scripts/jquery-3.1.0.js"></script>
    <script src="../../Scripts/kendo/jszip.min.js"></script>
    <script src="../../Scripts/kendo/kendo.all.min.js"></script>
    <script src="../../Scripts/kendo/console.js"></script>
</head>
<body>
    <h1>Users Management</h1><br><br>
    <div id="example">
        <div class="demo-section k-content wide">
            <div id="grid"></div>
        </div>
    </div>
</body>

<script>
    var jsonObject = @Html.Raw(Json.Encode(Model));

    $(document).ready(function () {
        dataSource = new kendo.data.DataSource({
            //data: jsonObject,
            transport: {
                read: function (e) {
                    e.success(jsonObject);
                },
                update: function (e) {
                    var gridData = e.data.models[0];
                    var user = {
                        Id: gridData.Id,
                        UserName: gridData.UserName,
                        DepartmentName: gridData.DepartmentName,
                        Email: gridData.Email,
                        Activated: gridData.Activated,
                        LastLoginTime: kendo.toString(gridData.LastLoginTime, "yyyy-MM-dd h:mm:ss tt"),
                        CreatedDate: gridData.CreatedDate,
                    };
                        $.ajax({
                            url: "/ApplicationUser/UpdateUser",
                            data: user,
                            success: function (data) {
                                alert(data);
                            }
                        });
                    e.success();
                },
                destroy: function (e) {
                    var gridData = e.data.models[0];
                    var user = {
                        Id: gridData.Id,
                        UserName: gridData.UserName,
                        Email: gridData.Email,
                        Activated: gridData.Activated,
                        LastLoginTime: kendo.toString(gridData.LastLoginTime, "yyyy-MM-dd h:mm:ss tt"),
                        CreatedDate: gridData.CreatedDate,
                    };
                        $.ajax({
                            url: "/ApplicationUser/DeleteUser",
                            data: user,
                            success: function (data) {
                                alert(data);
                            }
                        });
                    e.success();
                },

                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                }
            },
            batch: true,
            pageSize: 20,
            schema: {
                model: {
                    id: "Id",
                    fields: {
                        Id: { nullable: true },
                        UserName: { nullable: true },
                        DepartmentName: { nullable: true },
                        Email: { validation: { required: true } },
                        Activated: { validation: { required: true } },
                        LastLoginTime: {editable: false,  type: "datetime", validation: { required: true }},
                        CreatedDate: { editable: false, type: "string" }
                    }
                }
            }
        });

        $("#grid").kendoGrid({
            dataSource: dataSource,
            //dataBound: function (e) {
            //    e.sender.select("tr:eq(0)");
            //},
            filterable: true,
            pageable: true,
            height: 550,
            columns: [
                { field: "UserName", title: "User", filterable: { multi: true, search: true } },
                { field: "DepartmentName", title: "Department", filterable: { multi: true, search: true }, editor: departmentDropDownEditor },
                { field: "Email", title: "Email", filterable: { multi: true, search: true }},
                { field: "Activated", title: "Activated", filterable: { multi: true, search: true }, editor: activatedDropDownEditor },
                { field: "LastLoginTime", title: "Last Login", filterable: { multi: true, search: true }},
                { field: "CreatedDate", title: "Created", filterable: { multi: true, search: true } },
                {
                    command: ["edit","destroy"], title: "&nbsp;" }],
            editable: "inline"
            //selectable: "multiple, cell"
        });
        //var grid = $("#grid").data("kendoGrid");
        //grid.bind("saveChanges", grid_saveChanges);
    });

    function activatedDropDownEditor(container, options) {
        var data = [
            { text: "True", value: "True" },
            { text: "False", value: "False" }
        ];

        $('<input required name="' + options.field + '"/>')
            .appendTo(container)
            .kendoDropDownList({
                dataTextField: "text",
                dataValueField: "value",
                dataSource: data
            });
    }

    function departmentDropDownEditor(container, options) {
        $('<input required name="' + options.field + '"/>')
            .appendTo(container)
            .kendoDropDownList({
                dataTextField: "DepartmentName",
                dataValueField: "DepartmentName",
                dataSource: {
                    transport: {
                        dataType: "jsonp",
                        read: "/Department/GetDepartmentList"
                    }
                }
            });
    }

</script>

