select study_protocol.nci_id "trialid", 
case when summary4funding.type_code = 'INDUSTRIAL' then 'Abbreviated' else 'Complete' end,
study_protocol.submission_number "submissionnumber",
summary4funding.type_code,
organization.name "organization",
case when accepted.milestone_date > coalesce(terminated.reactivateddate,'1900-01-01') then accepted.milestone_date else terminated.reactivateddate end "accepteddate",
tsr.milestone_date "tsrdate",
study_onhold.onhold_date "onholddate",
study_onhold.offhold_date "offholddate",
study_onhold.onhold_reason_code "onholdreason",
study_onhold.onhold_reason_text "onholddescription",
'' "additionalcomments",
document_workflow_status.status_code "processingstatus"
from (select * from study_protocol where submission_number > 1) study_protocol
join (select * from study_milestone where milestone_code = 'SUBMISSION_ACCEPTED') accepted
on accepted.study_protocol_identifier = study_protocol.identifier
join (select * from study_milestone where milestone_code = 'READY_FOR_TSR' and milestone_date::date >= 'startDate' and milestone_date::date <= 'endDate') tsr
on tsr.study_protocol_identifier = study_protocol.identifier
join (select * from study_site where functional_code = 'LEAD_ORGANIZATION') study_site
on study_site.study_protocol_identifier = study_protocol.identifier
join research_organization 
on research_organization.identifier = study_site.research_organization_identifier
join organization
on organization.identifier = research_organization.organization_identifier
join (select distinct study_protocol_identifier, type_code from study_resourcing where summ_4_rept_indicator = true and type_code != 'INDUSTRIAL') summary4funding
on summary4funding.study_protocol_identifier = study_protocol.identifier
join (select * from document_workflow_status where current = true) document_workflow_status
on document_workflow_status.study_protocol_identifier = study_protocol.identifier
left join (select study_protocol_identifier, 
-- rank() OVER (PARTITION BY study_protocol_identifier ORDER BY case when milestone_code = 'SUBMISSION_REACTIVATED' then milestone_date end) "reactivatednumber",
max(case when milestone_code = 'SUBMISSION_REACTIVATED' then milestone_date end) "reactivateddate"
from study_milestone 
where case when milestone_code = 'SUBMISSION_REACTIVATED' then milestone_date end is not null 
group by study_protocol_identifier) terminated
on terminated.study_protocol_identifier = study_protocol.identifier
left join study_onhold
on study_onhold.study_protocol_identifier = study_protocol.identifier
order by tsrdate;