@model CTROReporting.ViewModels.ReportGenerateViewModel
@{
    ViewBag.Title = "CTRP Reporting";
    Layout = "../Shared/_HomeLayout.cshtml";
}
<h1>Report</h1><br><br>

@if (Model.ReportResult == true)
{
    <div class="alertmessage-success"></div>
}
@if (Model.ReportResult == false && !string.IsNullOrEmpty(Model.SelectedReport))
{
    <div class="alertmessage-fail"></div>
}
@*@if (Model.ReportResult == true)
    {
        <div class="alertmessage-cancel"></div>
    }*@
<div> The current time is: @DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")</div>
<br />

@Html.DropDownListFor(model => model.ReportId, Model.Reports, "--Select a report--", new { @id = "reportlist", @class = "col-md-12", @style = "display:block;width:270px;;float:left" })

@using (Html.BeginForm("Report", "Report", FormMethod.Post))
{
    <div id="reportdatecard" class="card col-md-12">
        <br>
        @Html.ValidationSummary()
        <div style="float:left;" class="col-md-12">
            <div class="row">
                <div class=" col-md-6">
                    @Html.LabelFor(x => x.StartDate, new { @class = "col-md-4 form-control-label" })
                </div>
                <div class=" col-md-6">
                    @Html.TextBoxFor(x => x.StartDate, new { @class = "ui-datepicker", @id = "startdate", @style = "display:block;float:left;" })
                </div>
            </div>
            <div class="row">
                <div class=" col-md-6">
                    @Html.LabelFor(x => x.EndDate, new { @class = "col-md-4 form-control-label" })
                </div>
                <div class=" col-md-6">
                    @Html.TextBoxFor(x => x.EndDate, new { @class = "ui-datepicker", @id = "enddate", @style = "display:block;float:left;" })
                </div>
            </div>
        </div>
        <br>
    </div>
    <br>
    <div id="reportdescriptioncard" class="card col-md-12" style="display: none">
    </div>
    <div class="row">
        <div class=" col-md-4">
        </div>
        <div class=" col-md-4">
            <input type="submit" class="col-md-4 form-control-label" value="Submit" data-toggle="modal" href="#progressModal" onclick="CreateProgressBar();" />
        </div>
        <div class=" col-md-4">
        </div>
    </div>
    @Html.HiddenFor(m => m.SelectedReport)
}

@*<button class="nav-link" data-toggle="modal" href="#progressModal" onclick="CreateProgressBar();">
        <span data-feather="layers"></span>
        Tickets
    </button>*@


<div class="modal fade" id="progressModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="myModalLabel">Loading</h5>
                @*<button type="button" class="close" data-dismiss="modal">
                        <span aria-hidden="true">&times;</span>
                    </button>*@
            </div>
            <div class="modal-body" id="createprogressbar">
            </div>
            @*<div class="modal-footer">
                    <button type="button" class="btn btn-primary" aria-hidden="true">Add</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                </div>*@
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        var reportdatecard = $("#reportdatecard");
        var startdate = $("#startdate");
        var enddate = $("#enddate");
        $("#reportlist").selectmenu({
            create: function (event, data) {
                $("#SelectedReport").val(null);
            },

            change: function (event, data) {
                var url = "@Url.Action("GetReportByID", "Report")?reportid=" + data.item.value;
                $.ajax({
                    url: url,
                    success: function (data) {
                        $("#reportdescriptioncard").html(data);
                        $("#reportdescriptioncard").show("slow");
                    },
                    statusCode: {
                        404: function (content) { alert('cannot find resource'); },
                        500: function (content) { alert('internal server error'); }
                    },
                    error: function (req, status, errorObj) {
                        $("#reportdescriptioncard").hide();
                        // handle status === "timeout"
                        // handle other errors
                    }
                });

                $("#SelectedReport").val(data.item.value);
                $("#StartDate").val("");
                $("#EndDate").val("");

                startdate.removeClass("disable");
                startdate.datepicker('enable');
                enddate.removeClass("disable");
                enddate.datepicker('enable');

                if (data.item.value == "4") {
                    startdate.addClass("disable");
                    startdate.datepicker("disable");
                    enddate.addClass("disable");
                    enddate.datepicker("disable");
                }
                else if (data.item.value == "5") {
                    enddate.addClass("disable");
                    enddate.datepicker("disable");
                }
                else if (data.item.value == "7") {
                    startdate.addClass("disable");
                    startdate.datepicker("disable");
                    enddate.addClass("disable");
                    enddate.datepicker("disable");
                }
                else if (data.item.value == "9") {
                    startdate.addClass("disable");
                    startdate.datepicker("disable");
                    enddate.addClass("disable");
                    enddate.datepicker("disable");
                }
                else if (data.item.value == "12") {
                    startdate.addClass("disable");
                    startdate.datepicker("disable");
                    enddate.addClass("disable");
                    enddate.datepicker("disable");
                }
                else if (data.item.value == "13") {
                    startdate.addClass("disable");
                    startdate.datepicker("disable");
                    enddate.addClass("disable");
                    enddate.datepicker("disable");
                }
                else {
                }
            }
        });
    });

    function DisplayProgressMessage(ctl, msg) {
        $(ctl).prop("disabled", true).text(msg);
        return true;
    }

    function CreateProgressBar() {
        var url = "@Url.Action("ProgressBar", "Report")";

        $.get(url, function (result) {
            var notifications = $("#createprogressbar"); // cache it to avoid repeatedly searching the DOM
            notifications.load(url);
           setInterval(function () {
                notifications.load(url);
            }, 1000);

            if (@Model.ReportResult)
            {
                $('#progressModal').modal('hide');
            }
        });
    }

    $(document).ready(function () {
        $('.ui-datepicker').each(function (i, v) {
            $(".ui - datepicker").val(" ");
            //$(v).val($.datepicker.formatDate('dd-M-yy', new Date($(v).val())))
            $(v).datepicker({
                dateFormat: 'yy-mm-dd',
                changeYear: true,
                changeMonth: true,
                yearRange: '2000:2025',
                buttonImage: '@Url.Content("~/Images/calendar.gif")',
                buttonImageOnly: true,
                showOn: "button"
            });
        });
    });

    function GetMessage() {
        return function () {
            var successmessage = 'Success! A new report is created.'
            var htmlAlert = '<div class="alert alert-success"><h5>' + successmessage + '</h5></div>';
            $('.alertmessage-success').prepend(htmlAlert);
            $(".alertmessage-success .alert").first().hide().fadeIn(200).delay(3000).fadeOut(1000, function () { $(this).remove(); });

            var failmessage = 'Fail!'
            var htmlAlert = '<div class="alert alert-warning"><h5>' + failmessage + '</h5></div>';
            $('.alertmessage-fail').prepend(htmlAlert);
            $(".alertmessage-fail .alert").first().hide().fadeIn(200).delay(3000).fadeOut(1000, function () { $(this).remove(); });

            var cancelmessage = 'Cancelled!'
            var htmlAlert = '<div class="alert alert-info"><h5>' + cancelmessage + '</h5></div>';
            $('.alertmessage-cancel').prepend(htmlAlert);
            $(".alertmessage-cancel .alert").first().hide().fadeIn(200).delay(3000).fadeOut(1000, function () { $(this).remove(); });

            var wrongmessage = 'Wrong'
            var htmlAlert = '<div class="alert alert-danger"><h5>' + wrongmessage + '</h5></div>';
            $('.alertmessage-wrong').prepend(htmlAlert);
            $(".alertmessage-wrong .alert").first().hide().fadeIn(200).delay(3000).fadeOut(1000, function () { $(this).remove(); });

        }
    }

    $(document).ready(GetMessage());
</script>
