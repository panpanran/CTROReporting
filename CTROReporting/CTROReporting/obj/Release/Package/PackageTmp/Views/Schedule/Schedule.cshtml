@using Microsoft.AspNet.Identity

@model IEnumerable<CTROReporting.ViewModels.ScheduleListViewModel>
@{
    ViewBag.Title = "History";
    Layout = "../Shared/_HomeLayout.cshtml";
}

@if (TempData["ScheduleResult"] == "true")
{
    <div class="alertmessage-success"></div>
}
@if (TempData["ScheduleResult"] == "false")
{
    <div class="alertmessage-fail"></div>
}


<head>
    <title>Popup editing</title>
    <meta charset="utf-8">
    <!--<link href="../../Content/kendo/examples-offline.css" rel="stylesheet">-->
    <link href="../../Content/kendo/kendo.common.min.css" rel="stylesheet">
    <link href="../../Content/kendo/kendo.default.min.css" rel="stylesheet">
    <link href="../../Content/kendo/kendo.rtl.min.css" rel="stylesheet">
    <link href="../../Content/kendo/kendo.default.mobile.min.css" rel="stylesheet">
    <script src="../../Scripts/jquery-3.1.0.js"></script>
    <script src="../../Scripts/kendo/jszip.min.js"></script>
    <script src="../../Scripts/kendo/kendo.all.min.js"></script>
    <script src="../../Scripts/kendo/console.js"></script>
</head>
<body>
    <h1>Schedule</h1><br><br>
    <div id="example">
        <div class="demo-section k-content wide">
            <div id="grid"></div>
        </div>
    </div>
</body>

<script>
    var jsonObject = @Html.Raw(Json.Encode(Model));

    //$(document).ready(function () {
        var  dataSource = new kendo.data.DataSource({
            //data: jsonObject,
            //autoSync: true,
            transport: {
                read: function (e) {
                    //$('#grid').data('kendoGrid').dataSource.read();

                    e.success(jsonObject);
                },
                update: function (e) {
                    var gridData = e.data.models[0];
                    var schedule = {
                            ScheduleId: gridData.ScheduleId,
                            StartTime: kendo.toString(gridData.StartTime, "MM/dd/yyyy h:mm:ss tt"),
                            IntervalDays: gridData.IntervalDays,
                            CreatedDate: gridData.CreatedDate,
                            UserName: gridData.UserName,
                            ReportName: gridData.ReportName
                        };
                        $.ajax({
                            url: "/Schedule/UpdateSchedule",
                            data: schedule,
                            success: function (data) {
                                window.location.href = "/Schedule/Schedule";
                                alert(data);
                            }
                        });
                    e.success();
                },
                destroy: function (e) {
                    var gridData = e.data.models[0];
                    var schedule = {
                        ScheduleId: gridData.ScheduleId,
                        StartTime: kendo.toString(gridData.StartTime, "yyyy-MM-dd h:mm:ss tt"),
                        IntervalDays: gridData.IntervalDays,
                        CreatedDate: gridData.CreatedDate,
                        UserName: gridData.UserName,
                        ReportName: gridData.ReportName
                    };
                        $.ajax({
                            url: "/Schedule/DeleteSchedule",
                            data: schedule,
                            success: function (data) {
                                alert(data);
                            }
                    });

                    e.success();
                },
                create: function (e) {
                    var gridData = e.data.models[0];
                    var schedule = {
                        ScheduleId: gridData.ScheduleId,
                        StartTime: kendo.toString(gridData.StartTime, "yyyy-MM-dd h:mm:ss tt"),
                        IntervalDays: gridData.IntervalDays,
                        CreatedDate: gridData.CreatedDate,
                        UserName: gridData.UserName,
                        ReportName: gridData.ReportName
                    };
                    $.ajax({
                        url: "/Schedule/CreateSchedule",
                        data: schedule,
                        success: function (data) {
                            window.location.href = "/Schedule/Schedule";
                            //alert(data);
                        }
                    });
                    //$('#grid').data('kendoGrid').dataSource.read();

                    e.success();
                },

                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                }
            },
            batch: true,
            pageSize: 20,
            schema: {
                model: {
                    id: "ScheduleId",
                    fields: {
                        ScheduleId: { editable: false, nullable: true },
                        ReportName: { validation: { required: true } },
                        StartTime: { type: "datetime", validation: { required: true }},
                        IntervalDays: { type: "string", validation: { required: true } },
                        CreatedDate: { editable: false, type: "string" }
                    }
                }
            }
        });

        $("#grid").kendoGrid({
            dataSource: dataSource,
            //dataBound: function (e) {
            //    e.sender.select("tr:eq(0)");
            //},
            filterable: true,
            pageable: true,
            height: 550,
            toolbar: ["create"],
            columns: [
                { field: "ScheduleId", title: "ID", filterable: { multi: true, search: true } },
                { field: "ReportName", title: "Report", filterable: { multi: true, search: true }, editor: categoryDropDownEditor },
                { field: "StartTime", title: "Start Time", format: "{0:M/d/yyyy h:mm:ss tt}", filterable: { multi: true, search: true }, editor: timeEditor },
                { field: "IntervalDays", title: "Interval Days", filterable: { multi: true, search: true } },
                //{ field: "UserName", title: "User", filterable: { multi: true, search: true } },
                { field: "CreatedDate", title: "Created", filterable: { multi: true, search: true } },
                {
                    command: ["edit","destroy"], title: "&nbsp;" }],
            editable: "inline"
            //selectable: "multiple, cell"
        });

        //var grid = $("#grid").data("kendoGrid");
        //grid.bind("saveChanges", grid_saveChanges);
    //});

    function timeEditor(container, options) {
        $('<input data-text-field="' + options.field + '" data-value-field="' + options.field + '" data-bind="value:' + options.field + '" data-format="' + options.format + '"/>')
            .appendTo(container)
            .kendoDateTimePicker({});
    }

    //Batch Update
    function grid_saveChanges(e) {
        var gridData = $("#grid").data("kendoGrid").dataSource.data();
        var schedules = [];
        for (i = 0; i < gridData.length; i++) {
            schedules[i] = {
                ScheduleId: gridData[i].ScheduleId,
                StartTime: gridData[i].StartTime,
                IntervalDays: gridData[i].IntervalDays,
                CreatedDate: gridData[i].CreatedDate,
                UserName: gridData[i].UserName,
                ReportName: gridData[i].ReportName
            };
            $.ajax({
                url: "/Schedule/UpdateSchedule",
                data: schedules[i],
                success: function (data) {
                    alert(data);
                }
            });
        }
    }

    function categoryDropDownEditor(container, options) {
        if (options.model.isNew() == true) {
            $('<input required name="' + options.field + '"/>')
                .appendTo(container)
                .kendoDropDownList({
                    dataTextField: "ReportName",
                    dataValueField: "ReportName",
                    dataSource: {
                        transport: {
                            dataType: "jsonp",
                            read: "/Report/GetReportList"
                        }
                    }
                });
        }
        else {
            $('<input required name="' + options.field + '"/>')
                .attr("readonly", true)
                .appendTo(container)
                .kendoDropDownList({
                    dataTextField: "ReportName",
                    dataValueField: "ReportName",
                    dataSource: {
                        transport: {
                            dataType: "jsonp",
                            read: "/Report/GetReportList"
                        }
                    }
                });
        }
    }

    function GetMessage() {
        return function () {
            var successmessage = 'Success! A new schedule is created.'
            var htmlAlert = '<div class="alert alert-success"><h5>' + successmessage + '</h5></div>';
            $('.alertmessage-success').prepend(htmlAlert);
            $(".alertmessage-success .alert").first().hide().fadeIn(200).delay(3000).fadeOut(1000, function () { $(this).remove(); });

            var failmessage = 'Fail! Sorry, a same report has been scheduled with too close start time'
            var htmlAlert = '<div class="alert alert-warning"><h5>' + failmessage + '</h5></div>';
            $('.alertmessage-fail').prepend(htmlAlert);
            $(".alertmessage-fail .alert").first().hide().fadeIn(200).delay(3000).fadeOut(1000, function () { $(this).remove(); });

            var cancelmessage = 'Cancelled!'
            var htmlAlert = '<div class="alert alert-info"><h5>' + cancelmessage + '</h5></div>';
            $('.alertmessage-cancel').prepend(htmlAlert);
            $(".alertmessage-cancel .alert").first().hide().fadeIn(200).delay(3000).fadeOut(1000, function () { $(this).remove(); });

            var wrongmessage = 'Wrong'
            var htmlAlert = '<div class="alert alert-danger"><h5>' + wrongmessage + '</h5></div>';
            $('.alertmessage-wrong').prepend(htmlAlert);
            $(".alertmessage-wrong .alert").first().hide().fadeIn(200).delay(3000).fadeOut(1000, function () { $(this).remove(); });

        }
    }

    $(document).ready(GetMessage());

</script>
